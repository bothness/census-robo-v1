{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Tab.svelte",
    "../../TabList.svelte",
    "../../TabPanel.svelte",
    "../../Fact.svelte",
    "../../Item.svelte",
    "../../Ranks.svelte",
    "../../Table.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { getContext, onMount, tick } from 'svelte';\n\n  import getId from './id';\n  import { TABS } from './Tabs.svelte';\n\n  let tabEl;\n\n  const tab = {\n    id: getId()\n  };\n  const { registerTab, registerTabElement, selectTab, selectedTab, controls } = getContext(TABS);\n\n  let isSelected;\n  $: isSelected = $selectedTab === tab;\n\n  registerTab(tab);\n\n  onMount(async () => {\n    await tick();\n    registerTabElement(tabEl);\n  });\n</script>\n\n<style>\n\t.svelte-tabs__tab {\n\t\tborder: none;\n\t\tborder-bottom: 2px solid transparent;\n\t\tcolor: #000000;\n    cursor: pointer;\n    list-style: none;\n    display: inline-block;\n    padding: 0.5em 0.75em;\n\t}\n\t\n  .svelte-tabs__tab:focus {\n    outline: thin dotted;\n  }\n\n\t.svelte-tabs__selected {\n\t\tborder-bottom: 2px solid #4F81E5;\n    color: #4F81E5;\n\t}\n</style>\n\n<li\n  bind:this={tabEl}\n  role=\"tab\"\n  id={tab.id}\n  aria-controls={$controls[tab.id]}\n  aria-selected={isSelected}\n  tabindex=\"{isSelected ? 0 : -1}\"\n  class:svelte-tabs__selected={isSelected}\n  class=\"svelte-tabs__tab\"\n  on:click={() => selectTab(tab)}>\n\t<slot></slot>\n</li>\n",
    "<style>\n\t.svelte-tabs__tab-list {\n    border-bottom: 1px solid #CCCCCC;\n    margin: 0;\n    padding: 0;\n\t}\n</style>\n\n<ul role=\"tablist\" class=\"svelte-tabs__tab-list\">\n  <slot></slot>\n</ul>\n",
    "<script>\n  import { getContext } from 'svelte';\n\n  import getId from './id';\n  import { TABS } from './Tabs.svelte';\n\n  const panel = {\n    id: getId()\n  };\n  const { registerPanel, selectedPanel, labeledBy } = getContext(TABS);\n\n  registerPanel(panel);\n</script>\n\n<style>\n  .svelte-tabs__tab-panel {\n    margin-top: 0.5em;\n  }\n</style>\n\n<div \n  id={panel.id}\n  aria-labelledby={$labeledBy[panel.id]}\n  class=\"svelte-tabs__tab-panel\"\n  role=\"tabpanel\">\n  {#if $selectedPanel === panel}\n    <slot></slot>\n  {/if}\n</div>\n",
    "<script>\n\texport let place;\n\texport let indicator;\n\texport let breaks;\n\texport let group;\n\tlet unit = group === 'change' ? \"%\" : indicator.unit;\n\tlet set = indicator.unit === '%' ? 'perc' : 'val';\n\tlet rank = set === 'perc' ? 'rankp' : 'rank';\n</script>\n\n<style>\n\t.muted {\n\t\tcolor: #999;\n\t}\n\t.positive {\n\t\tcolor: #008c4e;\n\t}\n\t.negative {\n\t\tcolor: #f04b22;\n\t}\n\t.quin {\n\t\tcolor: white;\n\t\tpadding: 0 3px;\n\t}\n\t.lo {\n\t\tbackground-color: #f04b22;\n\t}\n\t.hi {\n\t\tbackground-color: #008c4e;\n\t}\n</style>\n\n{#if place.data[indicator.dataset][rank][group][indicator.value] < breaks[0]}\n  <li>{indicator.name}\n  {#if place.data[indicator.dataset][set][group][indicator.value] < 0 && group === 'change'}\n<strong class=\"negative\">&#9662;{Math.abs(place.data[indicator.dataset][set][group][indicator.value]).toLocaleString()}{unit}</strong>\n  {:else if place.data[indicator.dataset][set][group][indicator.value] > 0 && group === 'change'}\n<strong class=\"positive\">&#9652;{place.data[indicator.dataset][set][group][indicator.value].toLocaleString()}{unit}</strong>\n  {:else}\n<strong>{place.data[indicator.dataset][set][group][indicator.value].toLocaleString()}{unit}</strong>\n  {/if}\n<small class=\"quin hi\">{place.data[indicator.dataset][rank][group][indicator.value]}</small> <small class=\"muted\">(top 10%)</small></li>\n{:else if place.data[indicator.dataset][rank][group][indicator.value] >= breaks[8]}\n  <li>{indicator.name} \n  {#if place.data[indicator.dataset][set][group][indicator.value] < 0 && group === 'change'}\n<strong class=\"negative\">&#9662;{Math.abs(place.data[indicator.dataset][set][group][indicator.value]).toLocaleString()}{unit}</strong>\n  {:else if place.data[indicator.dataset][set][group][indicator.value] > 0 && group === 'change'}\n<strong class=\"positive\">&#9652;{place.data[indicator.dataset][set][group][indicator.value].toLocaleString()}{unit}</strong>\n  {:else}\n<strong>{place.data[indicator.dataset][set][group][indicator.value].toLocaleString()}{unit}</strong>\n  {/if}\n\t<small class=\"quin lo\">{place.data[indicator.dataset][rank][group][indicator.value]}</small> <small class=\"muted\">(bottom 10%)</small></li>\n{/if}\n",
    "<script>\n\texport let name;\n\texport let place;\n\texport let dataset;\n\texport let value;\n\texport let unit;\n\texport let breaks;\n\t\n\tlet set = unit === '%' ? 'perc' : 'val';\n\t\n\t$: rank = unit === '%' ? place.data[dataset].rankp.c2011[value] : place.data[dataset].rank.c2011[value];\n\t$: quin = rank < breaks[1] ? 'q5' : rank < breaks[3] ? 'q4' : rank < breaks[5] ? 'q3' : rank < breaks[7] ? 'q2' : 'q1';\n\t\n\t$: crank = place.data[dataset].rank.change[value];\n\t$: cquin = crank < breaks[1] ? 'q5' : crank < breaks[3] ? 'q4' : crank < breaks[5] ? 'q3' : crank < breaks[7] ? 'q2' : 'q1';\n</script>\n\n<style>\n\t.muted {\n\t\tcolor: #555;\n\t}\n\t.positive {\n\t\tcolor: #008c4e;\n\t}\n\t.negative {\n\t\tcolor: #f04b22;\n\t}\n\t.quin {\n\t\tcolor: white;\n\t\tpadding: 0 3px;\n\t}\n\t.q1 {\n\t\tbackground-color: #f04b22;\n\t}\n\t.q2 {\n\t\tbackground-color: #f68620;\n\t}\n\t.q3 {\n\t\tbackground-color: #ffcb06;\n\t}\n\t.q4 {\n\t\tbackground-color: #7ec349;\n\t}\n\t.q5 {\n\t\tbackground-color: #008c4e;\n\t}\n</style>\n\n<li>{name}: <strong>{place.data[dataset][set].c2011[value].toLocaleString()}{unit}</strong> <small class=\"quin {quin}\">{rank}</small> \n{#if place.data[dataset][set].change[value] < 0}\n  <span class=\"negative\">&#9662;{Math.abs(place.data[dataset][set].change[value])}%</span>\n{:else if place.data[dataset][set].change[value] > 0}\n  <span class=\"positive\">&#9652;{place.data[dataset][set].change[value]}%</span>\n{:else}\n  <span class=\"muted\">{place.data[dataset][set].change[value]}%</span>\n{/if}\n<small class=\"quin {cquin}\">{crank}</small></li>\n",
    "<script>\n\texport let total, breaks;\n</script>\n\n<style>\n\t.quin {\n\t\tcolor: white;\n\t\tpadding: 0 3px;\n\t}\n  .q1 {\n\t\tbackground-color: #f04b22;\n\t}\n\t.q2 {\n\t\tbackground-color: #f68620;\n\t}\n\t.q3 {\n\t\tbackground-color: #ffcb06;\n\t}\n\t.q4 {\n\t\tbackground-color: #7ec349;\n\t}\n\t.q5 {\n\t\tbackground-color: #008c4e;\n\t}\n</style>\n\n<p>\n\tRank relative to other LAs:<br/>\n\t<small class=\"quin q5\">1 - {breaks[1] - 1}</small>\n\t<small class=\"quin q4\">{breaks[1]} - {breaks[3] - 1}</small>\n\t<small class=\"quin q3\">{breaks[3]} - {breaks[5] - 1}</small>\n\t<small class=\"quin q2\">{breaks[5]} - {breaks[7] - 1}</small>\n\t<small class=\"quin q1\">{breaks[7]} - {total}</small>\n</p>\n\n",
    "<script>\n\timport { data } from './stores.js';\n\texport let options, set;\n\t\n\tlet rows = [];\n\tfor (const i in options) {\n\t\tlet area = options[i];\n\t\tlet population = set === 'change' ? $data[area.value].data.population.val[set].all.toFixed(1) + '%' : $data[area.value].data.population.val[set].all;\n\t\tlet density = set === 'change' ? $data[area.value].data.density.val[set].density.toFixed(1) + '%' : $data[area.value].data.density.val[set].density;\n\t\tlet median = set === 'change' ? $data[area.value].data.medage.val[set].median.toFixed(1) + '%' : $data[area.value].data.medage.val[set].median;\n\t\tlet row = [\n\t\t\tarea.label,\n\t\t\t$data[area.value].area,\n\t\t\tpopulation,\n\t\t\tdensity,\n\t\t\tmedian,\n\t\t\t$data[area.value].data.age.perc[set].a015.toFixed(1) + '%',\n\t\t\t$data[area.value].data.age.perc[set].a1664.toFixed(1) + '%',\n\t\t\t$data[area.value].data.age.perc[set].a65plus.toFixed(1) + '%',\n\t\t\t$data[area.value].data.ethnicity.perc[set].white.toFixed(1) + '%',\n\t\t\t$data[area.value].data.ethnicity.perc[set].asian.toFixed(1) + '%',\n\t\t  $data[area.value].data.ethnicity.perc[set].black.toFixed(1) + '%',\n\t\t  $data[area.value].data.ethnicity.perc[set].mixed.toFixed(1) + '%',\n\t\t  $data[area.value].data.ethnicity.perc[set].other.toFixed(1) + '%',\n\t\t  $data[area.value].data.tenure.perc[set].owned.toFixed(1) + '%',\n\t\t  $data[area.value].data.tenure.perc[set].sharedown.toFixed(1) + '%',\n\t\t  $data[area.value].data.tenure.perc[set].rentsocial.toFixed(1) + '%',\n\t\t  $data[area.value].data.tenure.perc[set].rentprivate.toFixed(1) + '%',\n\t\t  $data[area.value].data.tenure.perc[set].other.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].employed.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].unemployed.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].student.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].carer.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].retired.toFixed(1) + '%',\n\t\t  $data[area.value].data.economic.perc[set].inactive.toFixed(1) + '%'\n\t\t];\n\t\trows.push(row);\n\t}\n\t\n\tlet rowsort = 0;\n\t\n\tfunction sortTable(col) {\n\t\tconsole.log('sort');\n\t\tif (col === 0 && rowsort != 0) {\n\t\t\trows = rows.sort((a, b) => a[col].localeCompare(b[col], 'en'));\n\t\t\trowsort = col;\n\t\t} else if (rowsort === col) {\n\t\t\trows = rows.reverse();\n\t\t\trowsort = null;\n\t\t} else {\n\t\t\trows = rows.sort((a, b) => { return parseFloat(b[col]) - parseFloat(a[col]); });\n\t\t\trowsort = col;\n\t\t}\n\t}\n</script>\n\n<style>\n\ttable {\n\t  border-collapse: collapse;\n\t}\n\tth {\n\t\tcursor: pointer;\n\t}\n\ttd {\n\t\tborder-top: 1px solid black;\n\t}\n\tth, td {\n\t\tpadding: 2px 5px;\n\t\ttext-align: left;\n\t\tvertical-align: bottom;\n\t}\n\t.leftborder {\n\t\tborder-left: 1px solid black;\n\t}\n</style>\n\n{#if options[0]}\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th rowspan=2>#</th>\n\t\t\t<th rowspan=2 on:click={()=>{sortTable(0)}}>Authority&#8645;</th>\n\t\t\t<th rowspan=2 on:click={()=>{sortTable(1)}}>Area&#8645;</th>\n\t\t\t<th rowspan=2 on:click={()=>{sortTable(2)}}>Population&#8645;</th>\n\t\t\t<th rowspan=2 on:click={()=>{sortTable(3)}}>Density&#8645;</th>\n\t\t\t<th colspan=4 class=\"leftborder\">Age</th>\n\t\t\t<th colspan=5 class=\"leftborder\">Ethnicity</th>\n\t\t\t<th colspan=5 class=\"leftborder\">Housing tenure</th>\n\t\t\t<th colspan=6 class=\"leftborder\">Economic activity</th>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<th class=\"leftborder\" on:click={()=>{sortTable(4)}}>Median&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(5)}}>0-15&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(6)}}>16-64&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(7)}}>65+&#8645;</th>\n\t\t\t<th class=\"leftborder\" on:click={()=>{sortTable(8)}}>White&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(9)}}>Asian&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(10)}}>Black&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(11)}}>Mixed&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(12)}}>Other&#8645;</th>\n\t\t\t<th class=\"leftborder\" on:click={()=>{sortTable(13)}}>Owned&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(14)}}>Shared&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(15)}}>Rented(soc)&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(16)}}>Rented(pri)&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(17)}}>Other&#8645;</th>\n\t\t\t<th class=\"leftborder\" on:click={()=>{sortTable(18)}}>Employed&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(19)}}>Unemployed&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(20)}}>Student&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(21)}}>Carer&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(22)}}>Retired&#8645;</th>\n\t\t\t<th on:click={()=>{sortTable(23)}}>Inactive&#8645;</th>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t{#each rows as row, i}\n\t\t<tr>\n\t\t\t<td>{i + 1}</td>\n\t\t\t{#each row as item}\n\t\t\t<td>{item.toLocaleString()}</td>\n\t\t\t{/each}\n\t\t</tr>\n\t\t{/each}\n\t</tbody>\n</table>\n{/if}"
  ],
  "names": [],
  "mappings": "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"
}